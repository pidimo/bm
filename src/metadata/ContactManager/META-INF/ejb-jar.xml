<?xml version="1.0" encoding="UTF-8"?>

<ejb-jar xmlns="http://java.sun.com/xml/ns/j2ee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/ejb-jar_2_1.xsd"
         version="2.1">

    <enterprise-beans>
        <entity>
            <ejb-name>Address</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.AddressHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.Address</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.AddressBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>false</reentrant>
            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>Address</abstract-schema-name>
            <cmp-field>
                <field-name>active</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>addressId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>addressType</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>birthday</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>code</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>houseNumber</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>lastModificationDate</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>name1</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>name2</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>name3</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>personal</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>recordDate</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>searchName</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>street</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>taxNumber</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>version</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>languageId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>titleId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>salutationId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>recordUserId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>bankAccountId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>lastModificationUserId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>countryId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>cityId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>education</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>keywords</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>imageId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>additionalAddressLine</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>isPublic</field-name>
            </cmp-field>
            <primkey-field>addressId</primkey-field>
            <query>
                <query-method>
                    <method-name>findByFavorites</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(a) FROM Address as a, Favorite as b WHERE a.addressId = b.addressId AND b.companyId = ?1 AND b.userId = ?2]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByPersonNames</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                        <method-param>java.lang.String</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(a) FROM Address as a WHERE a.addressType='1' and a.name1 = ?1 AND a.name2 = ?2  AND a.companyId = ?3]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>ejbSelectAddressesByNames</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                        <method-param>java.lang.Object[]</method-param>
                    </method-params>
                </query-method>
                <result-type-mapping>Local</result-type-mapping>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(a) FROM Address as a]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>ContactPerson</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.ContactPersonHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.ContactPerson</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.ContactPersonBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>com.piramide.elwis.domain.contactmanager.ContactPersonPK</prim-key-class>
            <reentrant>false</reentrant>

            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>ContactPerson</abstract-schema-name>
            <cmp-field>
                <field-name>active</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>addressId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>contactPersonId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>function</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>version</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>departmentId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>personTypeId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>recordUserId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>recordDate</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>addAddressLine</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>additionalAddressId</field-name>
            </cmp-field>
            <query>
                <query-method>
                    <method-name>findBySearchNameAndPersonType</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(c) FROM ContactPerson as c, Address as a WHERE c.contactPersonId = a.addressId
                                AND a.searchName = ?1 AND c.personTypeId = ?2 AND c.companyId = ?3]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findBySearchNameAndNotPersonType</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(c) FROM ContactPerson as c, Address as a WHERE c.contactPersonId = a.addressId
                                AND a.searchName = ?1 AND (c.personTypeId is null OR c.personTypeId <> ?2) AND c.companyId = ?3]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByAddressAsContactPerson</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(c) FROM ContactPerson as c WHERE c.contactPersonId = ?1 AND c.companyId = ?2]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByAdditionalAddressId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(c) FROM ContactPerson as c WHERE c.additionalAddressId = ?1]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>BankAccount</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.BankAccountHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.BankAccount</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.BankAccountBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>false</reentrant>

            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>BankAccount</abstract-schema-name>
            <cmp-field>
                <field-name>accountNumber</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>accountOwner</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>bankAccountId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>bankId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>version</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>addressId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>iban</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>accountId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>description</field-name>
            </cmp-field>
            <primkey-field>bankAccountId</primkey-field>
            <!--<<Titus -->
            <query>
                <description></description>
                <query-method>
                    <method-name>findByCompanyId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(ba) FROM BankAccount as ba WHERE ba.companyId= ?1 and ba.addressId=?2 ]]>
                </ejb-ql>
            </query>
            <!--Titus>> -->
            <query>
                <query-method>
                    <method-name>findByAddressId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(ba) FROM BankAccount as ba WHERE ba.addressId= ?1]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>Department</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.DepartmentHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.Department</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.DepartmentBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>false</reentrant>

            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>Department</abstract-schema-name>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>departmentId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>name</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>version</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>parentId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>organizationId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>managerId</field-name>
            </cmp-field>
            <primkey-field>departmentId</primkey-field>
            <!--<<Titus -->
            <query>
                <description></description>
                <query-method>
                    <method-name>findByCompanyId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(d) FROM Department as d WHERE d.companyId = ?1 and d.organizationId = ?2]]>
                </ejb-ql>
            </query>
            <!--Titus>> -->
            <query>
                <query-method>
                    <method-name>findByAddress</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(d) FROM Department as d WHERE d.organizationId = ?1 and d.managerId IS NULL]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByContactPerson</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(d) FROM Department as d WHERE d.organizationId = ?1 and d.managerId =?2]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>Office</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.OfficeHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.Office</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.OfficeBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>false</reentrant>

            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>Office</abstract-schema-name>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>officeId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>name</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>version</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>supervisorId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>organizationId</field-name>
            </cmp-field>
            <primkey-field>officeId</primkey-field>
            <!--<<Titus -->
            <query>
                <description></description>
                <query-method>
                    <method-name>findByCompanyId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(off) FROM Office as off WHERE off.companyId = ?1 and off.organizationId = ?2]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByOrganizationId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(off) FROM Office as off WHERE off.organizationId = ?1]]>
                </ejb-ql>
            </query>
            <!--Titus>> -->
            <query>
                <query-method>
                    <method-name>findBySupervisorId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(off) FROM Office as off WHERE off.supervisorId = ?1]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>Employee</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.EmployeeHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.Employee</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.EmployeeBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>false</reentrant>

            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>Employee</abstract-schema-name>
            <cmp-field>
                <field-name>costHour</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>costPosition</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>dateEnd</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>employeeId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>function</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>hireDate</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>hourlyRate</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>socialSecurityNumber</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>version</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>company</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>officeId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>departmentId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>healthFundId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>costCenterId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>initials</field-name>
            </cmp-field>
            <primkey-field>employeeId</primkey-field>
            <!--<<Titus -->
            <query>
                <description></description>
                <query-method>
                    <method-name>findByCompanyId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(e) FROM Employee as e WHERE e.company = ?1]]>
                </ejb-ql>
            </query>
            <!--Titus>> -->
            <query>
                <query-method>
                    <method-name>findByHealthFundId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(e) FROM Employee as e WHERE e.healthFundId = ?1]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>Telecom</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.TelecomHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.Telecom</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.TelecomBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>false</reentrant>

            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>Telecom</abstract-schema-name>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>description</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>telecomId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>data</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>version</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>addressId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>telecomTypeId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>contactPersonId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>predetermined</field-name>
            </cmp-field>
            <primkey-field>telecomId</primkey-field>
            <query>
                <description></description>
                <query-method>
                    <method-name>findAddressTelecoms</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(te) FROM Telecom as te WHERE te.addressId = ?1 AND te.contactPersonId IS NULL]]>
                </ejb-ql>
            </query>
            <query>
                <description></description>
                <query-method>
                    <method-name>findContactPersonTelecoms</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(te) FROM Telecom as te WHERE te.addressId = ?1 AND te.contactPersonId=?2]]>
                </ejb-ql>
            </query>
            <query>
                <description></description>
                <query-method>
                    <method-name>findTelecomsWithTelecomNumber</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(te) FROM Telecom as te WHERE te.data = ?1 AND te.companyId = ?2]]>
                </ejb-ql>
            </query>
            <query>
                <description></description>
                <query-method>
                    <method-name>findTelecomsWithTelecomNumberWithoutTelecomId</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(te) FROM Telecom as te WHERE te.data = ?1 AND te.companyId = ?3 AND te.telecomId <> ?2]]>
                </ejb-ql>
            </query>
            <query>
                <description></description>
                <query-method>
                    <method-name>findAllAddressDefaultTelecoms</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(te) FROM Telecom as te WHERE te.predetermined = True AND te.addressId = ?1 AND te.contactPersonId IS NULL]]>
                </ejb-ql>
            </query>
            <query>
                <description></description>
                <query-method>
                    <method-name>findAllContactPersonDefaultTelecoms</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(te) FROM Telecom as te WHERE te.addressId = ?1 AND te.contactPersonId =?2 AND te.predetermined = True]]>
                </ejb-ql>
            </query>
            <query>
                <description></description>
                <query-method>
                    <method-name>findAddressDefaultTelecomsByTypeId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(te) FROM Telecom as te WHERE te.predetermined = True AND te.contactPersonId IS NULL AND
                                                                        te.addressId = ?1 AND te.telecomTypeId=?2]]>
                </ejb-ql>
            </query>
            <query>
                <description></description>
                <query-method>
                    <method-name>findContactPersonDefaultTelecomsByTypeId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(te) FROM Telecom as te WHERE te.addressId = ?1 AND te.contactPersonId =?2
                            AND te.predetermined = True AND te.telecomTypeId=?3]]>
                </ejb-ql>
            </query>
            <query>
                <description></description>
                <query-method>
                    <method-name>findAllAddressTelecomsByTypeId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(te) FROM Telecom as te WHERE te.contactPersonId IS NULL AND
                                                                        te.addressId = ?1 AND te.telecomTypeId=?2]]>
                </ejb-ql>
            </query>
            <query>
                <description></description>
                <query-method>
                    <method-name>findAllContactPersonTelecomsByTypeId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(te) FROM Telecom as te WHERE te.addressId = ?1 AND te.contactPersonId =?2
                           AND te.telecomTypeId=?3]]>
                </ejb-ql>
            </query>
            <query>
                <description></description>
                <query-method>
                    <method-name>findAddressTelecomsByTelecomTypeType</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.String</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(te) FROM Telecom as te WHERE te.addressId = ?1 AND te.contactPersonId IS NULL AND te.telecomType.type=?2]]>
                </ejb-ql>
            </query>
            <query>
                <description></description>
                <query-method>
                    <method-name>findContactPersonTelecomsByTelecomTypeType</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.String</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(te) FROM Telecom as te WHERE te.addressId = ?1 AND te.contactPersonId=?2 AND te.telecomType.type=?3]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findAllContactPersonTelecomsOfAddress</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(te) FROM Telecom as te WHERE te.data = ?1 AND te.addressId = ?2 AND te.contactPersonId IS NOT NULL]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>Contact</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.ContactHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.Contact</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.ContactBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>false</reentrant>

            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>Contact</abstract-schema-name>
            <cmp-field>
                <field-name>addressId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>dateFinish</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>dateStart</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>contactId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>contactPersonId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>employeeId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>freeTextId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>note</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>processId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>templateId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>version</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>contactNumber</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>status</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>type</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>inOut</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>isAction</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>probability</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>documentFileName</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>additionalAddressId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>webDocumentId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>webGenerateUUID</field-name>
            </cmp-field>
            <primkey-field>contactId</primkey-field>
            <query>
                <query-method>
                    <method-name>findByProcessId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(c) FROM Contact AS c WHERE c.processId= ?1 ORDER BY c.dateStart ASC]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>ejbSelectMaxStartDate</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT MAX(c.dateStart) FROM Contact AS c WHERE c.processId= ?1 and c.addressId=?2]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>ejbSelectMaxContactIdByStartDate</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT MAX(c.contactId) FROM Contact AS c WHERE c.processId= ?1 and c.addressId=?2 and c.dateStart=?3]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>ejbSelectCountContactIdByAction</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT COUNT(c.contactId)
                    FROM Contact AS c
                    WHERE c.contactId = ?1 and c.companyId =?2 and c.isAction = True
                    ]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByDocumentFreeTextId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(c) FROM Contact AS c WHERE c.freeTextId = ?1]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByAddress</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(c) FROM Contact AS c WHERE c.addressId= ?1 AND c.contactPersonId IS NULL]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByContactPerson</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(c) FROM Contact AS c WHERE c.addressId= ?1 AND c.contactPersonId = ?2]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByEmployeeId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(c) FROM Contact AS c WHERE c.employeeId= ?1]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByAdditionalAddressId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(c) FROM Contact AS c WHERE c.additionalAddressId= ?1]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByWebGenerateUUID</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(c) FROM Contact AS c WHERE c.webGenerateUUID= ?1]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>ContactAttach</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.ContactAttachHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.ContactAttach</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.ContactAttachBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>com.piramide.elwis.domain.contactmanager.ContactAttachPK</prim-key-class>
            <reentrant>false</reentrant>

            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>ContactAttach</abstract-schema-name>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>contactId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>freeTextId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>fileName</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>fileSize</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>contentType</field-name>
            </cmp-field>
            <query>
                <query-method>
                    <method-name>findByContact</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(c) FROM ContactAttach AS c WHERE c.contactId= ?1 ORDER BY c.fileName ASC]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>ContactFreeText</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.ContactFreeTextHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.ContactFreeText</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.ContactFreeTextBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>false</reentrant>

            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>ContactFreeText</abstract-schema-name>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>freeTextId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>type</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>value</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>version</field-name>
            </cmp-field>
            <primkey-field>freeTextId</primkey-field>
        </entity>
        <entity>
            <ejb-name>Customer</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.CustomerHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.Customer</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.CustomerBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>false</reentrant>

            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>Customer</abstract-schema-name>
            <cmp-field>
                <field-name>customerId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>branchId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>number</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>customerTypeId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>expectedTurnOver</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>partnerId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>payConditionId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>payMoralityId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>priorityId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>sourceId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>version</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>numberOfEmployees</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>employeeId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>defaultDiscount</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>defaultDiscount</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>invoiceAddressId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>invoiceContactPersonId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>additionalAddressId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>invoiceShipping</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>referenceId</field-name>
            </cmp-field>
            <primkey-field>customerId</primkey-field>
            <!--<query>
                <query-method>
                    <method-name>findByCustomerCategoryValues</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(cc) FROM Customer AS c, IN(c.customerCategoryList) cc  WHERE cc.categoryId = ?1]]>
                </ejb-ql>
            </query>-->
            <query>
                <query-method>
                    <method-name>findByEmployeeIdAndCompanyId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(c) FROM Customer AS c WHERE c.employeeId = ?1 AND c.companyId = ?2]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findCustomerIdByEmployeeIdCompanyId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT c.customerId FROM Customer AS c WHERE c.employeeId = ?1 AND c.companyId = ?2]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByCustomerNumber</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(c) FROM Customer AS c WHERE c.number = ?1 AND c.companyId = ?2]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>ejbSelectMaxCustomerNumber</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT MAX(c.number) FROM Customer AS c WHERE c.companyId = ?1]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByPartnerId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(c) FROM Customer AS c WHERE c.partnerId = ?1]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByInvoiceAddress</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(c) FROM Customer AS c WHERE c.invoiceAddressId = ?1 AND c.invoiceContactPersonId IS NULL]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByInvoiceContactPerson</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(c) FROM Customer AS c WHERE c.invoiceAddressId = ?1 AND c.invoiceContactPersonId = ?2]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByEmployeeId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(c) FROM Customer AS c WHERE c.employeeId = ?1]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByAdditionalAddressId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(c) FROM Customer AS c WHERE c.additionalAddressId = ?1]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>Supplier</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.SupplierHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.Supplier</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.SupplierBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>false</reentrant>

            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>Supplier</abstract-schema-name>
            <cmp-field>
                <field-name>branchId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>categoryId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>customerNumber</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>priorityId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>supplierId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>supplierTypeId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>version</field-name>
            </cmp-field>
            <primkey-field>supplierId</primkey-field>
        </entity>
        <entity>
            <ejb-name>Recent</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.RecentHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.Recent</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.RecentBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>com.piramide.elwis.domain.contactmanager.RecentPK</prim-key-class>
            <reentrant>false</reentrant>

            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>Recent</abstract-schema-name>
            <cmp-field>
                <field-name>userId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>addressId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>recentId</field-name>
            </cmp-field>
            <query>
                <query-method>
                    <method-name>findByCompanyUser</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(r) FROM Recent AS r WHERE r.userId = ?1 AND r.companyId = ?2]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByAddressId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(r) FROM Recent AS r WHERE r.addressId = ?1]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>Favorite</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.FavoriteHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.Favorite</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.FavoriteBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>com.piramide.elwis.domain.contactmanager.FavoritePK</prim-key-class>
            <reentrant>false</reentrant>

            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>Favorite</abstract-schema-name>
            <cmp-field>
                <field-name>userId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>addressId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <query>
                <query-method>
                    <method-name>findByCompanyUser</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(f) FROM Favorite AS f WHERE f.userId = ?1 AND f.companyId = ?2]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByAddressId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(f) FROM Favorite AS f WHERE f.addressId = ?1]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>TelecomType</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.TelecomTypeHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.TelecomType</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.TelecomTypeBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>false</reentrant>

            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>TelecomType</abstract-schema-name>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>telecomTypeId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>telecomTypeName</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>position</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>version</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>langTextId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>type</field-name>
            </cmp-field>
            <primkey-field>telecomTypeId</primkey-field>
            <query>
                <query-method>
                    <method-name>findByCompanyId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(a) FROM TelecomType as a WHERE a.companyId = ?1]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByCompanyIdOrderBySequence</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(a) FROM TelecomType as a WHERE a.companyId = ?1 ORDER BY a.position ASC]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByCompanyIdAndTypeOrderBySequence</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.String</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(a) FROM TelecomType as a WHERE a.companyId = ?1 AND a.type = ?2 ORDER BY a.position ASC]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>ImportProfile</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.ImportProfileHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.ImportProfile</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.ImportProfileBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>false</reentrant>
            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>ImportProfile</abstract-schema-name>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>label</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>profileId</field-name>
            </cmp-field>
            <cmp-field>
                <description>
                    This is a constant than define the type of profile to import,
                    exists three types
                    Organization type: Import only organizations.
                    Person type: Import only persons
                    Organization and contact person type: Import Organization and his contact persons,
                    the values associated are defined in CatalogConstant class and ImportProfileType enum
                </description>
                <field-name>profileType</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>skipFirstRow</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>userId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>version</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>checkDuplicate</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>totalRecord</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>importStartTime</field-name>
            </cmp-field>
            <primkey-field>profileId</primkey-field>
            <query>
                <description>
                    Find the ImportProfile object according to label, userId and companyId parameters.
                    The labels must contain unique values in conbination of userId and compayId attributes.
                </description>
                <query-method>
                    <method-name>findByLabel</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(a)
                    FROM ImportProfile as a
                    WHERE a.label = ?1 AND a.userId = ?2 AND a.companyId = ?3
                    ]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByImportStartTime</method-name>
                    <method-params>
                        <method-param>java.lang.Long</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(a)
                    FROM ImportProfile as a
                    WHERE a.importStartTime = ?1
                    ]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>ImportColumn</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.ImportColumnHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.ImportColumn</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.ImportColumnBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>true</reentrant>
            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>ImportColumn</abstract-schema-name>
            <cmp-field>
                <field-name>columnId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>columnValue</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>groupId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>importColumnId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>profileId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>uiPosition</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>columnName</field-name>
            </cmp-field>
            <primkey-field>importColumnId</primkey-field>
            <query>
                <description>
                    This finder search all ImportColumns associated to the ImpotProfile, the first pameter
                    its the ImportProfile identifier, the second parameter is the company identifier.
                    The collection its ordered by uiPosition attribute in ascending way.
                </description>
                <query-method>
                    <method-name>findByProfileId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(a)
                    FROM ImportColumn as a
                    WHERE a.profileId = ?1 AND a.companyId = ?2
                    ORDER BY a.uiPosition ASC
                    ]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByProfileIdOrderByPosition</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(a)
                    FROM ImportColumn as a
                    WHERE a.profileId = ?1 AND a.companyId = ?2
                    ORDER BY a.columnValue ASC
                    ]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>AdditionalAddress</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.AdditionalAddressHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.AdditionalAddress</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.AdditionalAddressBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>true</reentrant>
            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>AdditionalAddress</abstract-schema-name>
            <cmp-field>
                <field-name>additionalAddressId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>addressId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>additionalAddressLine</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>cityId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>commentId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>countryId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>houseNumber</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>isDefault</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>street</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>version</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>name</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>additionalAddressType</field-name>
            </cmp-field>
            <primkey-field>additionalAddressId</primkey-field>
            <query>
                <query-method>
                    <method-name>findByDefault</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(a)
                    FROM AdditionalAddress as a
                    WHERE a.addressId = ?1 AND a.companyId = ?2 AND a.isDefault = true
                    ]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByAdditionalAddressType</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(a)
                    FROM AdditionalAddress as a
                    WHERE a.addressId = ?1 AND a.additionalAddressType = ?2
                    ]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByAddress</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(a)
                    FROM AdditionalAddress as a
                    WHERE a.addressId = ?1
                    ]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>AddressRelation</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.AddressRelationHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.AddressRelation</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.AddressRelationBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>true</reentrant>
            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>AddressRelation</abstract-schema-name>
            <cmp-field>
                <field-name>addressId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>relatedAddressId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>commentId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>relationId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>relationTypeId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>version</field-name>
            </cmp-field>
            <primkey-field>relationId</primkey-field>
            <query>
                <query-method>
                    <method-name>findByAddressId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(ar)
                    FROM AddressRelation as ar
                    WHERE ar.addressId = ?1
                    ]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByRelatedAddressId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(ar)
                    FROM AddressRelation as ar
                    WHERE ar.relatedAddressId = ?1
                    ]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>UserAddressAccess</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.UserAddressAccessHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.UserAddressAccess</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.UserAddressAccessBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>com.piramide.elwis.domain.contactmanager.UserAddressAccessPK</prim-key-class>
            <reentrant>true</reentrant>
            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>UserAddressAccess</abstract-schema-name>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>addressId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>userGroupId</field-name>
            </cmp-field>
            <query>
                <query-method>
                    <method-name>findUserAddressAccessByAddress</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(u) FROM UserAddressAccess AS u WHERE u.addressId = ?1]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findUserAddressAccessByUserGroup</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[SELECT OBJECT(u) FROM UserAddressAccess AS u WHERE u.userGroupId = ?1]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>ImportRecord</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.ImportRecordHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.ImportRecord</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.ImportRecordBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>true</reentrant>
            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>ImportRecord</abstract-schema-name>
            <cmp-field>
                <field-name>cityName</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>countryName</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>houseNumber</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>importRecordId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>isDuplicate</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>name1</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>name2</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>name3</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>profileId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>recordIndex</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>street</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>zip</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>version</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>identityKey</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>recordType</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>parentRecordId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>function</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>organizationId</field-name>
            </cmp-field>
            <primkey-field>importRecordId</primkey-field>
            <query>
                <query-method>
                    <method-name>findByImportProfileRecordTypeWithoutDuplicates</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(r)
                    FROM ImportRecord as r
                    WHERE r.profileId = ?1 AND r.companyId = ?2 AND r.isDuplicate = false AND r.recordType = ?3
                    ORDER BY r.recordIndex asc
                    ]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByImportProfile</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(r)
                    FROM ImportRecord as r
                    WHERE r.profileId = ?1
                    ]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByImportProfileChilds</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(r)
                    FROM ImportRecord as r
                    WHERE r.profileId = ?1 AND r.parentRecordId IS NOT NULL
                    ]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByIdentityKeyProfileId</method-name>
                    <method-params>
                        <method-param>java.lang.String</method-param>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(r)
                    FROM ImportRecord as r
                    WHERE r.identityKey = ?1 AND r.profileId = ?2 AND r.companyId = ?3
                    ]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByParentImportRecordId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(r)
                    FROM ImportRecord as r
                    WHERE r.parentRecordId = ?1 AND r.companyId = ?2
                    ]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByParentImportRecordIdWithoutDuplicates</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(r)
                    FROM ImportRecord as r
                    WHERE r.parentRecordId = ?1 AND r.companyId = ?2 AND r.isDuplicate = false
                    ]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByParentImportRecordIdDuplicates</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(r)
                    FROM ImportRecord as r
                    WHERE r.parentRecordId = ?1 AND r.companyId = ?2 AND r.isDuplicate = true
                    ]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByOrganizationId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(r)
                    FROM ImportRecord as r
                    WHERE r.organizationId = ?1
                    ]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>ejbSelectCountByProfileId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT COUNT(r.importRecordId)
                    FROM ImportRecord as r
                    WHERE r.profileId = ?1
                    ]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>ejbSelectCountByProfileIdDuplicates</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT COUNT(r.importRecordId)
                    FROM ImportRecord as r
                    WHERE r.profileId = ?1 AND r.isDuplicate = TRUE
                    ]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>RecordColumn</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.RecordColumnHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.RecordColumn</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.RecordColumnBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>com.piramide.elwis.domain.contactmanager.RecordColumnPK</prim-key-class>
            <reentrant>true</reentrant>
            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>RecordColumn</abstract-schema-name>
            <cmp-field>
                <field-name>columnValue</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>importColumnId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>importRecordId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>columnIndex</field-name>
            </cmp-field>
            <query>
                <query-method>
                    <method-name>findByImportRecord</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(r)
                    FROM RecordColumn as r
                    WHERE r.importRecordId = ?1
                    ORDER BY r.columnIndex asc
                    ]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>RecordDuplicate</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.RecordDuplicateHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.RecordDuplicate</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.RecordDuplicateBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>com.piramide.elwis.domain.contactmanager.RecordDuplicatePK</prim-key-class>
            <reentrant>true</reentrant>
            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>RecordDuplicate</abstract-schema-name>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>importRecordId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>addressId</field-name>
            </cmp-field>
            <query>
                <query-method>
                    <method-name>findByImportRecordId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(r)
                    FROM RecordDuplicate as r
                    WHERE r.importRecordId = ?1
                    ORDER BY r.addressId asc
                    ]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByAddressId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(r)
                    FROM RecordDuplicate as r
                    WHERE r.addressId = ?1
                    ]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>DedupliContact</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.DedupliContactHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.DedupliContact</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.DedupliContactBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>true</reentrant>
            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>DedupliContact</abstract-schema-name>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>dedupliContactId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>startTime</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>status</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>userId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>version</field-name>
            </cmp-field>
            <primkey-field>dedupliContactId</primkey-field>
            <query>
                <query-method>
                    <method-name>findByCompanyId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(d)
                    FROM DedupliContact as d
                    WHERE d.companyId = ?1
                    ]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>DuplicateGroup</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.DuplicateGroupHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.DuplicateGroup</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.DuplicateGroupBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>java.lang.Integer</prim-key-class>
            <reentrant>true</reentrant>
            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>DuplicateGroup</abstract-schema-name>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>dedupliContactId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>duplicateGroupId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>version</field-name>
            </cmp-field>
            <primkey-field>duplicateGroupId</primkey-field>
            <query>
                <query-method>
                    <method-name>findByDedupliContactId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(d)
                    FROM DuplicateGroup as d
                    WHERE d.dedupliContactId = ?1
                    ]]>
                </ejb-ql>
            </query>
        </entity>
        <entity>
            <ejb-name>DuplicateAddress</ejb-name>
            <local-home>com.piramide.elwis.domain.contactmanager.DuplicateAddressHome</local-home>
            <local>com.piramide.elwis.domain.contactmanager.DuplicateAddress</local>
            <ejb-class>com.piramide.elwis.domain.contactmanager.DuplicateAddressBean</ejb-class>
            <persistence-type>Container</persistence-type>
            <prim-key-class>com.piramide.elwis.domain.contactmanager.DuplicateAddressPK</prim-key-class>
            <reentrant>true</reentrant>
            <cmp-version>2.x</cmp-version>
            <abstract-schema-name>DuplicateAddress</abstract-schema-name>
            <cmp-field>
                <field-name>addressId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>companyId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>duplicateGroupId</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>isMain</field-name>
            </cmp-field>
            <cmp-field>
                <field-name>positionIndex</field-name>
            </cmp-field>
            <query>
                <query-method>
                    <method-name>findByDuplicateGroupId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(d)
                    FROM DuplicateAddress as d
                    WHERE d.duplicateGroupId = ?1
                    ORDER BY d.addressId asc
                    ]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByDuplicateGroupIdOrderPositionIndex</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(d)
                    FROM DuplicateAddress as d
                    WHERE d.duplicateGroupId = ?1
                    ORDER BY d.positionIndex asc
                    ]]>
                </ejb-ql>
            </query>
            <query>
                <query-method>
                    <method-name>findByAddressId</method-name>
                    <method-params>
                        <method-param>java.lang.Integer</method-param>
                    </method-params>
                </query-method>
                <ejb-ql>
                    <![CDATA[
                    SELECT OBJECT(d)
                    FROM DuplicateAddress as d
                    WHERE d.addressId = ?1
                    ]]>
                </ejb-ql>
            </query>
        </entity>
    </enterprise-beans>
    <relationships>
        <ejb-relation>
            <description>An Address have many contact persons</description>
            <ejb-relation-name>Address - ContactPerson</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Address</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Address</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>contactPersons</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>ContactPerson</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>ContactPerson</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>address</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <description>A person is contact person of many addresses</description>
            <ejb-relation-name>Address - ContactPerson2</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Person</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Address</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>organizations</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Organizations</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <relationship-role-source>
                    <ejb-name>ContactPerson</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>contactPerson</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Address - BankAccount</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Address</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Address</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>bankAccounts</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>BankAccount</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>BankAccount</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>address</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Address - Department</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Address</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Address</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>departments</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Department</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>Department</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>address</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Department - Department</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>ParentDepartment</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Department</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>ChildrenDepartment</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>Department</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>parent</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Office - Employee</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Office</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Office</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>employees</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Employee</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <cascade-delete></cascade-delete>
                <relationship-role-source>
                    <ejb-name>Employee</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>office</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Department - Employee</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Department</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Department</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>employees</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Employee</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <cascade-delete></cascade-delete>
                <relationship-role-source>
                    <ejb-name>Employee</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>department</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Employee - Address</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Employee</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Employee</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>address</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Address</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Address</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Office - Address</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Office</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <relationship-role-source>
                    <ejb-name>Office</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>address</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Address</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Address</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
        </ejb-relation>

        <ejb-relation>
            <ejb-relation-name>Employee - HealthFundAddress</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Employee</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <relationship-role-source>
                    <ejb-name>Employee</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>healthFund</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>HealthFund</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Address</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Address - Telecom</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Address</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Address</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>telecoms</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Telecom</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>Telecom</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>address</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>ContactPerson - Telecom</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>ContactPerson</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>ContactPerson</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>telecoms</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Telecom</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>Telecom</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>contactPerson</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Contact - ContactFreeText</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Contact</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Contact</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>contactFreeText</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>ContactFreeText</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>ContactFreeText</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Address - Contact</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Address</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Address</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>communications</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Contact</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>Contact</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Address - Customer</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Address</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Address</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Customer</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Customer</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>address</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Address - Supplier</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Address</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Address</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Supplier</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Supplier</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>address</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Address - Favorite</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Address</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Address</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>favorites</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Favorite</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>Favorite</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>address</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Address - Recent</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Address</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Address</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>recents</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Recent</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>Recent</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>address</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Contact - ContactPerson</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Contact</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <relationship-role-source>
                    <ejb-name>Contact</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>contactPerson</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>ContactPerson</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>ContactPerson</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Customer - Address</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Customer</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <relationship-role-source>
                    <ejb-name>Customer</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>partner</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Address</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Address</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Contact - Employee</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Contact</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <relationship-role-source>
                    <ejb-name>Contact</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>employee</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Employee</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Employee</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Department - ContactPerson</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Department</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <relationship-role-source>
                    <ejb-name>Department</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>contactPerson</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>ContactPerson</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>ContactPerson</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Telecom - TelecomType</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>TelecomRole</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>Telecom</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>telecomType</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>TelecomTypeRole</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>TelecomType</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Address - ImageFreeText</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>Address</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>Address</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>imageFreeText</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>FreeText</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>ContactFreeText</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>AdditionalAddress - ContactFreeText</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>additionalAddress</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>AdditionalAddress</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>contactFreeText</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>freetext</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>ContactFreeText</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>AddressRelation - ContactFreeText</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>addressRelation</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>AddressRelation</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>contactFreeText</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>freetext</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>ContactFreeText</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>Address - UserAddressAccess</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>address</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>Address</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>userAddressAccess</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>UserAddressAccess</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>address</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>ImportProfile - ImportColumn</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>importProfile</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>ImportProfile</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>importColumns</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>importColumn</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>ImportColumn</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>ImportRecord - RecordColumn</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>importRecord</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>ImportRecord</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>recordColumns</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>recordColumn</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>RecordColumn</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>ImportRecord - RecordDuplicate</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>importRecord</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>ImportRecord</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>recordDuplicates</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>recordDuplicate</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>RecordDuplicate</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>DedupliContact - DuplicateGroup</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>dedupliContact</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>DedupliContact</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>duplicateGroups</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>duplicateGroup</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>DuplicateGroup</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>DuplicateGroup - DuplicateAddress</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>duplicateGroup</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>DuplicateGroup</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>duplicateAddress</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>duplicateAddress</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <cascade-delete/>
                <relationship-role-source>
                    <ejb-name>DuplicateAddress</ejb-name>
                </relationship-role-source>
            </ejb-relationship-role>
        </ejb-relation>
        <ejb-relation>
            <ejb-relation-name>ImportRecord - ImportRecord</ejb-relation-name>
            <ejb-relationship-role>
                <ejb-relationship-role-name>parentImportRecord</ejb-relationship-role-name>
                <multiplicity>One</multiplicity>
                <relationship-role-source>
                    <ejb-name>ImportRecord</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>childImportRecords</cmr-field-name>
                    <cmr-field-type>java.util.Collection</cmr-field-type>
                </cmr-field>
            </ejb-relationship-role>
            <ejb-relationship-role>
                <ejb-relationship-role-name>childImportRecord</ejb-relationship-role-name>
                <multiplicity>Many</multiplicity>
                <relationship-role-source>
                    <ejb-name>ImportRecord</ejb-name>
                </relationship-role-source>
                <cmr-field>
                    <cmr-field-name>parentImportRecord</cmr-field-name>
                </cmr-field>
            </ejb-relationship-role>
        </ejb-relation>
    </relationships>
    <assembly-descriptor>
        <container-transaction>
            <description>Transaction attributes for 'Address' methods</description>
            <method>
                <ejb-name>Address</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        <container-transaction>
            <description>Transaction attributes for 'ContactPerson' methods</description>
            <method>
                <ejb-name>ContactPerson</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        <container-transaction>
            <description>Transaction attributes for 'BankAccount' methods</description>
            <method>
                <ejb-name>BankAccount</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        <container-transaction>
            <description>Transaction attributes for 'Department' methods</description>
            <method>
                <ejb-name>Department</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        <container-transaction>
            <description>Transaction attributes for 'Office' methods</description>
            <method>
                <ejb-name>Office</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        <container-transaction>
            <description>Transaction attributes for 'Employee' methods</description>
            <method>
                <ejb-name>Employee</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        <container-transaction>
            <description>Transaction attributes for 'Telecom' methods</description>
            <method>
                <ejb-name>Telecom</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        <container-transaction>
            <description>Transaction attributes for 'Contact' methods</description>
            <method>
                <ejb-name>Contact</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        <container-transaction>
            <description>Transaction attributes for 'ContactAttach' methods</description>
            <method>
                <ejb-name>ContactAttach</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        <container-transaction>
            <description>Transaction attributes for 'ContactFreeText' methods</description>
            <method>
                <ejb-name>ContactFreeText</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        <container-transaction>
            <description>Transaction attributes for 'Customer' methods</description>
            <method>
                <ejb-name>Customer</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        <container-transaction>
            <description>Transaction attributes for 'Supplier' methods</description>
            <method>
                <ejb-name>Supplier</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        <container-transaction>
            <description>Transaction attributes for 'Recent' methods</description>
            <method>
                <ejb-name>Recent</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        <container-transaction>
            <description>Transaction attributes for 'Favorite' methods</description>
            <method>
                <ejb-name>Favorite</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
        <container-transaction>
            <description>Transaction attributes for 'TelecomType' methods</description>
            <method>
                <ejb-name>TelecomType</ejb-name>
                <method-name>*</method-name>
            </method>
            <trans-attribute>Required</trans-attribute>
        </container-transaction>
    </assembly-descriptor>
</ejb-jar>